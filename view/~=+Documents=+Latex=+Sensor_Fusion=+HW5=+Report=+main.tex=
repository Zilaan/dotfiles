let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
argglobal
let s:cpo_save=&cpo
set cpo&vim
xmap <buffer> % <Plug>LatexBox_JumpToMatch
omap <buffer> % <Plug>LatexBox_JumpToMatch
nmap <buffer> % <Plug>LatexBox_JumpToMatch
onoremap <buffer> -ll :Latexmk
xnoremap <buffer> -ll :Latexmk
nnoremap <buffer> -ll :Latexmk
onoremap <buffer> -lL :Latexmk!
xnoremap <buffer> -lL :Latexmk!
nnoremap <buffer> -lL :Latexmk!
onoremap <buffer> -lc :LatexmkClean
xnoremap <buffer> -lc :LatexmkClean
nnoremap <buffer> -lc :LatexmkClean
onoremap <buffer> -lC :LatexmkClean!
xnoremap <buffer> -lC :LatexmkClean!
nnoremap <buffer> -lC :LatexmkClean!
onoremap <buffer> -lg :LatexmkStatus
xnoremap <buffer> -lg :LatexmkStatus
nnoremap <buffer> -lg :LatexmkStatus
onoremap <buffer> -lG :LatexmkStatus!
xnoremap <buffer> -lG :LatexmkStatus!
nnoremap <buffer> -lG :LatexmkStatus!
onoremap <buffer> -lk :LatexmkStop
xnoremap <buffer> -lk :LatexmkStop
nnoremap <buffer> -lk :LatexmkStop
onoremap <buffer> -le :LatexErrors
xnoremap <buffer> -le :LatexErrors
nnoremap <buffer> -le :LatexErrors
onoremap <buffer> -lv :LatexView
xnoremap <buffer> -lv :LatexView
nnoremap <buffer> -lv :LatexView
onoremap <buffer> <silent> -lt :LatexTOC
xnoremap <buffer> <silent> -lt :LatexTOC
nnoremap <buffer> <silent> -lt :LatexTOC
onoremap <buffer> <silent> -lj :LatexLabels
xnoremap <buffer> <silent> -lj :LatexLabels
nnoremap <buffer> <silent> -lj :LatexLabels
xmap <buffer> ae <Plug>LatexBox_SelectCurrentEnvOuter
xmap <buffer> a$ <Plug>LatexBox_SelectInlineMathOuter
onoremap <buffer> a$ :normal va$
onoremap <buffer> ae :normal vae
xmap <buffer> ie <Plug>LatexBox_SelectCurrentEnvInner
xmap <buffer> i$ <Plug>LatexBox_SelectInlineMathInner
onoremap <buffer> i$ :normal vi$
onoremap <buffer> ie :normal vie
vmap <buffer> <S-F7> <Plug>LatexEnvWrapSelection
vmap <buffer> <F7> <Plug>LatexWrapSelection
nmap <buffer> <F5> <Plug>LatexChangeEnv
imap <buffer> (( \eqref{
imap <buffer> [[ \begin{
imap <buffer> ]] <Plug>LatexCloseCurEnv
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal backupcopy=
setlocal nobinary
setlocal nobreakindent
setlocal breakindentopt=
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal cindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=81
setlocal comments=sO:%\ -,mO:%\ \ ,eO:%%,:%
setlocal commentstring=%%s
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal cursorline
setlocal define=\\\\\\([egx]\\|char\\|mathchar\\|count\\|dimen\\|muskip\\|skip\\|toks\\)\\=def\\|\\\\font\\|\\\\\\(future\\)\\=let\\|\\\\new\\(count\\|dimen\\|skip\\|muskip\\|box\\|toks\\|read\\|write\\|fam\\|insert\\)\\|\\\\\\(re\\)\\=new\\(boolean\\|command\\|counter\\|environment\\|font\\|if\\|length\\|savebox\\|theorem\\(style\\)\\=\\)\\s*\\*\\=\\s*{\\=\\|DeclareMathOperator\\s*{\\=\\s*
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=%E!\ LaTeX\ %trror:\ %m,%E%f:%l:\ %m,%E!\ %m,%Z<argument>\ %m,%Cl.%l\ %m,%-C(biblatex)%.%#in\ t%.%#,%-C(biblatex)%.%#Please\ v%.%#,%-C(biblatex)%.%#LaTeX\ a%.%#,%-Z(biblatex)%m,%-C(hyperref)%.%#on\ input\ line\ %l.,%-G%.%#Underfull%.%#,%-G%.%#Overfull%.%#,%-G%.%#specifier\ changed\ to%.%#,%-G%.%#You\ should\ put\ a\ space%.%#,%+WLaTeX\ %.%#Warning:\ %.%#line\ %l%.%#,%+W%.%#\ at\ lines\ %l--%*\\d,%+WLaTeX\ %.%#Warning:\ %m,%+W%.%#Warning:\ %m,%+P**%f,%+P**\"%f\",%-G%.%#
setlocal expandtab
if &filetype != 'tex'
setlocal filetype=tex
endif
setlocal fixendofline
setlocal foldcolumn=3
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=marker
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=\\\\input\\|\\\\include{
setlocal includeexpr=substitute(v:fname,\ '^.\\{-}{\\|}.*',\ '',\ 'g')
setlocal indentexpr=LatexBox_TexIndent()
setlocal indentkeys=0=\\end,0=\\end{enumerate},0=\\end{itemize},0=\\end{description},0=\\right,0=\\item,0=\\),0=\\],0},o,O,0\\
setlocal noinfercase
setlocal iskeyword=48-57,a-z,A-Z,192-255
setlocal keywordprg=
setlocal linebreak
setlocal nolisp
setlocal lispwords=
setlocal list
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
setlocal number
setlocal numberwidth=4
setlocal omnifunc=LatexBox_Complete
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal smartindent
setlocal softtabstop=4
setlocal spell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=~/.vim/spell/techspeak.utf-8.add
setlocal spelllang=en
setlocal statusline=%!airline#statusline(1)
setlocal suffixesadd=.tex
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'tex'
setlocal syntax=tex
endif
setlocal tabstop=4
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal undolevels=-123456
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
104
normal! zo
let s:l = 132 - ((131 * winheight(0) + 29) / 58)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
132
normal! 0
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
" vim: set ft=vim :
